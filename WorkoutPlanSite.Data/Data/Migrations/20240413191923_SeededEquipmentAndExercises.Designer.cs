// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkoutPlanSite.Data;

#nullable disable

namespace WorkoutPlanSite.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240413191923_SeededEquipmentAndExercises")]
    partial class SeededEquipmentAndExercises
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WorkoutPlanSite.Data.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Metric")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(33)
                        .HasColumnType("nvarchar(33)");

                    b.Property<int>("Plan")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://m.media-amazon.com/images/I/31vTXdGDWLL.jpg",
                            Metric = 0,
                            Name = "Barbell",
                            Plan = 1,
                            TypeId = 3,
                            Weight = 20.0
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://imgs.search.brave.com/Q6ZRty_7PTVms2Ni56mUW1fXs4NQqg7t399z1sP3QSA/rs:fit:860:0:0/g:ce/aHR0cHM6Ly9tZWRs/aW5lcGx1cy5nb3Yv/aW1hZ2VzL0JvZHlX/ZWlnaHQuanBn",
                            Metric = 0,
                            Name = "Body Weight",
                            Plan = 0,
                            TypeId = 4,
                            Weight = 0.0
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://imgs.search.brave.com/vzhkhzilFvRdJdKWOORL3c2c2KZ40_We6VCCf8_WszE/rs:fit:860:0:0/g:ce/aHR0cHM6Ly9pbWFn/ZXMudW5zcGxhc2gu/Y29tL3Bob3RvLTE1/NzY2Nzg5Mjc0ODQt/Y2M5MDc5NTcwODhj/P3E9ODAmdz0xMDAw/JmF1dG89Zm9ybWF0/JmZpdD1jcm9wJml4/bGliPXJiLTQuMC4z/Jml4aWQ9TTN3eE1q/QTNmREI4TUh4elpX/RnlZMmg4TW54OFpI/VnRZbUpsYkd4emZH/VnVmREI4ZkRCOGZI/d3c",
                            Metric = 0,
                            Name = "Dumbells",
                            Plan = 0,
                            TypeId = 2,
                            Weight = 10.0
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "https://imgs.search.brave.com/h9Uqz_X203ywQAK6tSpJ62bzBBeT2b9UGXP-uAIA2g8/rs:fit:860:0:0/g:ce/aHR0cHM6Ly9tZWRp/YS5nZXR0eWltYWdl/cy5jb20vaWQvMTg2/OTY0OTAyMC9waG90/by9tYW4tZXhlcmNp/c2luZy1vbi1sZWct/cHJlc3MuanBnP3M9/NjEyeDYxMiZ3PTAm/az0yMCZjPVZhQWVa/Y21nY3BkbTZVZ2hW/eDZUUW1SSDBQM0xk/d3RpR2wzMmpQalpm/Vm89",
                            Metric = 0,
                            Name = "Leg Press",
                            Plan = 2,
                            TypeId = 1,
                            Weight = 160.0
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "https://imgs.search.brave.com/zodUy4Bq1GO6EcDYqj7PLEdi2da2XwI1lRFIjU8-CyI/rs:fit:860:0:0/g:ce/aHR0cHM6Ly9hdGxh/bnRpc3N0cmVuZ3Ro/LmNvbS9hcHAvdXBs/b2Fkcy8yMDIyLzAx/L3B3NDQ5XzItNDE2/eDQxOC5wbmc",
                            Metric = 1,
                            Name = "ShoulderPressMachine",
                            Plan = 1,
                            TypeId = 1,
                            Weight = 44.0
                        },
                        new
                        {
                            Id = 6,
                            ImageUrl = "https://imgs.search.brave.com/SpT2VHXiOA03VRnEXdGRZ7zWWbuFy1W2UYsUco2dbI4/rs:fit:860:0:0/g:ce/aHR0cHM6Ly9tLm1l/ZGlhLWFtYXpvbi5j/b20vaW1hZ2VzL0kv/ODFOS0tqUkgtbkwu/anBn",
                            Metric = 0,
                            Name = "Light Dumbells",
                            Plan = 0,
                            TypeId = 2,
                            Weight = 5.0
                        });
                });

            modelBuilder.Entity("WorkoutPlanSite.Data.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Repetitions")
                        .HasColumnType("int");

                    b.Property<int>("Sets")
                        .HasColumnType("int");

                    b.Property<int>("difficulty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Adding weight increases the difficulty.",
                            EquipmentId = 1,
                            ImageURL = "https://imgs.search.brave.com/WsIfyLRdsOp2l_b93ZuNovQ0N6xWwRlmd7J60YcQpdA/rs:fit:860:0:0/g:ce/aHR0cHM6Ly90My5m/dGNkbi5uZXQvanBn/LzAwLzc4LzQyLzY0/LzM2MF9GXzc4NDI2/NDc2XzFiMG5vRzFF/bDk2MUFiamFRMG4w/cDloVkJhcVo2OWZ5/LmpwZw",
                            Name = "Bench Press",
                            Repetitions = 10,
                            Sets = 5,
                            difficulty = 2
                        },
                        new
                        {
                            Id = 2,
                            Description = "An exercise that affects many muscle groups.",
                            EquipmentId = 2,
                            ImageURL = "https://imgs.search.brave.com/txguJTQwUh-aVLcTs5KN5-R9d2wygtXauaQRnoTDFqE/rs:fit:500:0:0/g:ce/aHR0cHM6Ly9pbWcu/ZnJlZXBpay5jb20v/cHJlbWl1bS1waG90/by9tdXNjdWxhci1t/YW4tZG9pbmctcHVz/aHVwc18xMzMzOS0x/NTExMDMuanBnP3Np/emU9NjI2JmV4dD1q/cGc",
                            Name = "Push Ups",
                            Repetitions = 20,
                            Sets = 5,
                            difficulty = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Best shoulder exercise.",
                            EquipmentId = 3,
                            ImageURL = "https://imgs.search.brave.com/pE3uivlySZ9u5Krg650stNPFS7GSBqkqbqprETtZd3k/rs:fit:860:0:0/g:ce/aHR0cHM6Ly9oaXBz/LmhlYXJzdGFwcHMu/Y29tL2htZy1wcm9k/L2ltYWdlcy9sYXRl/cmFsLXJhaXNlcy0x/NjY3NTYzMjE4Lmpw/Zz9yZXNpemU9OTgw/Oio",
                            Name = "Lateral Raises",
                            Repetitions = 20,
                            Sets = 3,
                            difficulty = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "The casual shoulder press.",
                            EquipmentId = 5,
                            ImageURL = "https://imgs.search.brave.com/FffOzDwfbcV5YLP8coMNa0t1YsS0NNZJOSn0fhAdWEs/rs:fit:860:0:0/g:ce/aHR0cHM6Ly9maXRs/aWZlZmFuYXRpY3Mu/Y29tL3dwLWNvbnRl/bnQvdXBsb2Fkcy8y/MDIwLzA1L3Nob3Vs/ZGVyLXByZXNzLW1h/Y2hpbmVzLTc4MHg0/NzAuanBn",
                            Name = "Shoulder Press",
                            Repetitions = 15,
                            Sets = 3,
                            difficulty = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Requires lots of endurance.",
                            EquipmentId = 4,
                            ImageURL = "https://imgs.search.brave.com/4g4i0m7XWDQazbokaw4CImRFLEgjQLFJAVZXYvQkEJE/rs:fit:860:0:0/g:ce/aHR0cHM6Ly90NC5m/dGNkbi5uZXQvanBn/LzAwLzkyLzg4LzI3/LzM2MF9GXzkyODgy/Nzk2XzVwSldta1Mx/YXMxMUFnZERJTkp3/T05ZQkE1NWEzUGZ6/LmpwZw",
                            Name = "Leg Press",
                            Repetitions = 20,
                            Sets = 5,
                            difficulty = 2
                        },
                        new
                        {
                            Id = 6,
                            Description = "An old school exercise.",
                            EquipmentId = 3,
                            ImageURL = "https://imgs.search.brave.com/TaoILpBPBJPPH5z3HtuoWIXcIOMingymHVe4ew4ZNEA/rs:fit:860:0:0/g:ce/aHR0cHM6Ly9pMC53/cC5jb20vd3d3Lm11/c2NsZWFuZGZpdG5l/c3MuY29tL3dwLWNv/bnRlbnQvdXBsb2Fk/cy8yMDE4LzEwLzEx/MDktLUJpY2VwLUN1/cmwtR2V0dHlJbWFn/ZXMtNTkxNDAzNjQ1/LmpwZz9xdWFsaXR5/PTg2JnN0cmlwPWFs/bA",
                            Name = "Bicep Curls",
                            Repetitions = 15,
                            Sets = 4,
                            difficulty = 1
                        });
                });

            modelBuilder.Entity("WorkoutPlanSite.Data.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(33)
                        .HasColumnType("nvarchar(33)");

                    b.HasKey("Id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Machines"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dumbells"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bars"
                        },
                        new
                        {
                            Id = 4,
                            Name = "No equipment"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WorkoutPlanSite.Data.Models.Equipment", b =>
                {
                    b.HasOne("WorkoutPlanSite.Data.Models.Type", "Type")
                        .WithMany("Equipments")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("WorkoutPlanSite.Data.Models.Exercise", b =>
                {
                    b.HasOne("WorkoutPlanSite.Data.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("WorkoutPlanSite.Data.Models.Type", b =>
                {
                    b.Navigation("Equipments");
                });
#pragma warning restore 612, 618
        }
    }
}
